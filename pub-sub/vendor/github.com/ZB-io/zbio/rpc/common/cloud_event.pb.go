// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cloud_event.proto

package common

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Create/Send Message: partition is optional
// https://github.com/cloudevents/spec/blob/master/spec.md
type CloudEvent struct {
	//uuid - REQUIRED
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	//type of event related to the originating occurrence - REQUIRED
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	// REQUIRED
	Source string `protobuf:"bytes,3,opt,name=source,proto3" json:"source,omitempty"`
	//subject or topic- REQUIRED
	Data []byte `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	//The version of the CloudEvents specification which the event uses - REQUIRED
	SpecVersion string               `protobuf:"bytes,5,opt,name=spec_version,json=specVersion,proto3" json:"spec_version,omitempty"`
	Subject     string               `protobuf:"bytes,6,opt,name=subject,proto3" json:"subject,omitempty"`
	Time        *timestamp.Timestamp `protobuf:"bytes,7,opt,name=time,proto3" json:"time,omitempty"`
	//Identifies the schema that data adheres to
	DataSchemaUri string `protobuf:"bytes,8,opt,name=data_schema_uri,json=dataSchemaUri,proto3" json:"data_schema_uri,omitempty"`
	//rfc2046
	ContentType string `protobuf:"bytes,9,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	//any number of additional context attributes with distinct names, known as "extension attributes".
	Extensions           map[string]string `protobuf:"bytes,10,rep,name=extensions,proto3" json:"extensions,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *CloudEvent) Reset()         { *m = CloudEvent{} }
func (m *CloudEvent) String() string { return proto.CompactTextString(m) }
func (*CloudEvent) ProtoMessage()    {}
func (*CloudEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_c868e8965ece6bd1, []int{0}
}

func (m *CloudEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloudEvent.Unmarshal(m, b)
}
func (m *CloudEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloudEvent.Marshal(b, m, deterministic)
}
func (m *CloudEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloudEvent.Merge(m, src)
}
func (m *CloudEvent) XXX_Size() int {
	return xxx_messageInfo_CloudEvent.Size(m)
}
func (m *CloudEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_CloudEvent.DiscardUnknown(m)
}

var xxx_messageInfo_CloudEvent proto.InternalMessageInfo

func (m *CloudEvent) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CloudEvent) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *CloudEvent) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *CloudEvent) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *CloudEvent) GetSpecVersion() string {
	if m != nil {
		return m.SpecVersion
	}
	return ""
}

func (m *CloudEvent) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

func (m *CloudEvent) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *CloudEvent) GetDataSchemaUri() string {
	if m != nil {
		return m.DataSchemaUri
	}
	return ""
}

func (m *CloudEvent) GetContentType() string {
	if m != nil {
		return m.ContentType
	}
	return ""
}

func (m *CloudEvent) GetExtensions() map[string]string {
	if m != nil {
		return m.Extensions
	}
	return nil
}

func init() {
	proto.RegisterType((*CloudEvent)(nil), "zbio.roost.common.CloudEvent")
	proto.RegisterMapType((map[string]string)(nil), "zbio.roost.common.CloudEvent.ExtensionsEntry")
}

func init() { proto.RegisterFile("cloud_event.proto", fileDescriptor_c868e8965ece6bd1) }

var fileDescriptor_c868e8965ece6bd1 = []byte{
	// 355 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x50, 0x3d, 0x4f, 0xc3, 0x30,
	0x14, 0x54, 0x92, 0x7e, 0xd0, 0xd7, 0x42, 0xa9, 0x85, 0x90, 0xd5, 0x85, 0xd0, 0x01, 0x65, 0xa9,
	0x23, 0x95, 0x05, 0x21, 0xb1, 0x14, 0x75, 0x64, 0x09, 0x85, 0xa1, 0x4b, 0x94, 0x38, 0xa6, 0x35,
	0x34, 0x71, 0x64, 0x3b, 0x15, 0xe5, 0xe7, 0xf0, 0x4b, 0x91, 0x9d, 0x06, 0x10, 0x6c, 0xef, 0x9d,
	0xcf, 0xf7, 0xee, 0x0e, 0x46, 0x74, 0x2b, 0xaa, 0x2c, 0x66, 0x3b, 0x56, 0x68, 0x52, 0x4a, 0xa1,
	0x05, 0x1a, 0x7d, 0xa4, 0x5c, 0x10, 0x29, 0x84, 0xd2, 0x84, 0x8a, 0x3c, 0x17, 0xc5, 0xf8, 0x62,
	0x2d, 0xc4, 0x7a, 0xcb, 0x42, 0x4b, 0x48, 0xab, 0x97, 0x50, 0xf3, 0x9c, 0x29, 0x9d, 0xe4, 0x65,
	0xfd, 0x67, 0xf2, 0xe9, 0x01, 0xdc, 0x1b, 0xa5, 0x85, 0x11, 0x42, 0x27, 0xe0, 0xf2, 0x0c, 0x3b,
	0xbe, 0x13, 0xf4, 0x22, 0x97, 0x67, 0x08, 0x41, 0x4b, 0xef, 0x4b, 0x86, 0x5d, 0x8b, 0xd8, 0x19,
	0x9d, 0x43, 0x47, 0x89, 0x4a, 0x52, 0x86, 0x3d, 0x8b, 0x1e, 0x36, 0xc3, 0xcd, 0x12, 0x9d, 0xe0,
	0x96, 0xef, 0x04, 0x83, 0xc8, 0xce, 0xe8, 0x12, 0x06, 0xaa, 0x64, 0x34, 0xde, 0x31, 0xa9, 0xb8,
	0x28, 0x70, 0xdb, 0xfe, 0xe8, 0x1b, 0xec, 0xb9, 0x86, 0x10, 0x86, 0xae, 0xaa, 0xd2, 0x57, 0x46,
	0x35, 0xee, 0xd8, 0xd7, 0x66, 0x45, 0x04, 0x5a, 0xc6, 0x2e, 0xee, 0xfa, 0x4e, 0xd0, 0x9f, 0x8d,
	0x49, 0x9d, 0x85, 0x34, 0x59, 0xc8, 0xb2, 0xc9, 0x12, 0x59, 0x1e, 0xba, 0x82, 0xa1, 0x39, 0x1a,
	0x2b, 0xba, 0x61, 0x79, 0x12, 0x57, 0x92, 0xe3, 0x23, 0xab, 0x78, 0x6c, 0xe0, 0x47, 0x8b, 0x3e,
	0x49, 0x6e, 0x4c, 0x51, 0x51, 0x68, 0x56, 0xe8, 0xd8, 0x86, 0xeb, 0xd5, 0xa6, 0x0e, 0xd8, 0xd2,
	0x64, 0x7c, 0x00, 0x60, 0xef, 0x9a, 0x15, 0xc6, 0xa1, 0xc2, 0xe0, 0x7b, 0x41, 0x7f, 0x36, 0x25,
	0xff, 0xfa, 0x25, 0x3f, 0xd5, 0x91, 0xc5, 0x37, 0x7f, 0x51, 0x68, 0xb9, 0x8f, 0x7e, 0x09, 0x8c,
	0xef, 0x60, 0xf8, 0xe7, 0x19, 0x9d, 0x82, 0xf7, 0xc6, 0xf6, 0x87, 0xaa, 0xcd, 0x88, 0xce, 0xa0,
	0xbd, 0x4b, 0xb6, 0x55, 0x53, 0x76, 0xbd, 0xdc, 0xba, 0x37, 0xce, 0x7c, 0xb2, 0xf2, 0xd7, 0x5c,
	0x6f, 0xaa, 0xd4, 0x9c, 0x0d, 0x57, 0xf3, 0x29, 0x17, 0xa1, 0xf1, 0x12, 0xca, 0x92, 0x86, 0xb5,
	0x93, 0xb4, 0x63, 0x6b, 0xb9, 0xfe, 0x0a, 0x00, 0x00, 0xff, 0xff, 0x8e, 0xbb, 0xbe, 0xa6, 0x18,
	0x02, 0x00, 0x00,
}
